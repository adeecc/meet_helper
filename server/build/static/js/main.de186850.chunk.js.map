{"version":3,"sources":["assets/css/navbar.module.css","assets/css/footer.module.css","components/Navbar.jsx","components/Footer.jsx","components/CreateForm.jsx","components/Home.jsx","components/Table.jsx","App.jsx","registerServiceWorker.js","index.jsx","utils/axiosClient.js"],"names":["module","exports","NavBar","Fragment","className","styles","skipLink","href","Link","to","Footer","footer","title","description","footerlink","CreateForm","Component","constructor","props","super","onTextInputChangeHandler","event","nam","target","name","val","value","this","setState","onCheckboxChangeHandler","prevDays","state","days","index","indexOf","splice","onSubmitHandler","preventDefault","axiosPOST","courseDept","courseCode","courseName","section","professorName","hour","meet_link","drive_link","render","onSubmit","class","onChange","type","id","placeholder","for","Home","handleChange","data","componentDidMount","axiosGET","then","res","ref","map","el","key","_id","dept","code","professor","day","item","getRows","App","Navbar","Switch","Route","exact","path","component","Table","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","BrowserRouter","basename","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","axios","require","axiosDELETE","url","options","method","sessionStorage","getItem","params","axiosPUT"],"mappings":"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","file":"static/js/main.de186850.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__lBJVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__3Ijlc\",\"title\":\"footer_title__ueLpk\",\"description\":\"footer_description__1vCXC\",\"footerlink\":\"footer_footerlink__2PDPG\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../assets/css/navbar.module.css\";\n\n//TODO Web Template Studio: Add a new link in the NavBar for your page here.\n// A skip link is included as an accessibility best practice. For more information visit https://www.w3.org/WAI/WCAG21/Techniques/general/G1.\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#mainContent\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          meet_helper\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"nav-item nav-link active\" to=\"Table\">\n            Table\n          </Link>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\nexport default NavBar;\n","import React from \"react\";\r\nimport styles from \"../assets/css/footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-around\">\r\n          <div className=\"col-8 col-md-5\">\r\n            <h5 className={styles.title}>meet_helper</h5>\r\n            <p className={styles.description}>\r\n              This is placeholder text. Your web app description goes here.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React, { Component } from 'react'\nimport { axiosPOST } from '../utils/axiosClient'\n\nexport default class CreateForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courseDept: \"\",\n            courseCode: \"\",\n            courseName: \"\",\n            section: \"\",\n            professorName: \"\",\n            hour: \"\",\n            meet_link: \"\",\n            drive_link: \"\",\n            days: [],\n        }\n    }\n\n\n    onTextInputChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n\n        this.setState({[nam]: val});\n    }\n\n    onCheckboxChangeHandler = (event) => {\n        const val = event.target.value;\n        const prevDays = this.state.days;\n        const index = prevDays.indexOf(val);\n        if (index < 0)  {\n            this.setState({days: [...prevDays, val]});\n        } else {\n            prevDays.splice(index, 1);\n            this.setState({days: prevDays});\n        }\n    }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n\n        axiosPOST('/api/classrooms/create/', this.state);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <form onSubmit={this.onSubmitHandler}>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"courseDept\" id=\"inputCourseDept\" placeholder=\"Department\" />\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"courseCode\" id=\"inputCourseCode\" placeholder=\"Code\" />\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"courseName\" id=\"inputCourseName\" placeholder=\"Course Name\" />\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"section\" id=\"inputSection\" placeholder=\"Section\" />\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"professorName\" id=\"inputProfessorName\" placeholder=\"Professor\" />\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"hour\" id=\"inputCourseCode\" placeholder=\"Hour (1-9)\" />\n                        </div>\n                        <div class=\"form-group  col-md-6\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"meet_link\" id=\"inputProfessorName\" placeholder=\"Google Meet Link\" />\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group  col\">\n                            <input onChange={this.onTextInputChangeHandler} type=\"text\" class=\"form-control\" name=\"drive_link\" id=\"inputProfessorName\" placeholder=\"Drive Link (if any)\" />\n                        </div>\n                    </div>\n\n                    <div class=\"form-inline\">\n                        <div class=\"form-check custom-checkbox form-check-inline col\">\n                            <input onChange={this.onCheckboxChangeHandler} type=\"checkbox\" class=\"form-check-input\" name=\"days\" id=\"DayM\" value=\"M\" />\n                            <label class=\"form-check-label\" for=\"DayM\">Monday</label>\n                        </div>\n\n\n                        <div class=\"form-check custom-checkbox form-check-inline col\">\n                            <input onChange={this.onCheckboxChangeHandler} type=\"checkbox\" class=\"form-check-input\" name=\"days\" id=\"Dayt\" value=\"T\" />\n                            <label class=\"form-check-label\" for=\"DayT\">Tuesday</label>\n                        </div>\n\n\n                        <div class=\"form-check custom-checkbox form-check-inline col\">\n                            <input onChange={this.onCheckboxChangeHandler} type=\"checkbox\" class=\"form-check-input\" name=\"days\" id=\"DayW\" value=\"W\" />\n                            <label class=\"form-check-label\" for=\"DayW\">Wednesday</label>\n                        </div>\n\n\n                        <div class=\"form-check custom-checkbox form-check-inline col\">\n                            <input onChange={this.onCheckboxChangeHandler} type=\"checkbox\" class=\"form-check-input\" name=\"days\" id=\"DayTh\" value=\"Th\" />\n                            <label class=\"form-check-label\" for=\"DayTh\">Thursday</label>\n                        </div>\n\n\n                        <div class=\"form-check custom-checkbox form-check-inline col\">\n                            <input onChange={this.onCheckboxChangeHandler} type=\"checkbox\" class=\"form-check-input\" name=\"days\" id=\"DayF\" value=\"F\" />\n                            <label class=\"form-check-label\" for=\"DayF\">Friday</label>\n                        </div>\n\n\n                        <div class=\"form-check custom-checkbox form-check-inline col\">\n                            <input onChange={this.onCheckboxChangeHandler} type=\"checkbox\" class=\"form-check-input\" name=\"days\" id=\"DayS\" value=\"S\" />\n                            <label class=\"form-check-label\" for=\"DayS\">Saturday</label>\n                        </div>\n                    </div>\n\n\n                    <div class=\"form-row mt-3\">\n                        <button type=\"submit\" class=\"btn btn-primary  mx-auto col-sm-3\">Save</button>\n                    </div>\n\n                </form>\n            </React.Fragment >\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport CreateForm from \"./CreateForm\";\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <CreateForm></CreateForm>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { axiosGET } from '../utils/axiosClient'\r\n// import './Home.scss'\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosGET('/api/classrooms/').then(res => {\r\n            this.setState({ data: res.data });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let getRows = () => {\r\n            return this.state.data.map(el => (\r\n                <tr key={el._id}>\r\n                    <td>{el.dept} {el.code}</td>\r\n                    <td>\r\n                        <a href={el.meet_link}>\r\n                            {el.name}\r\n                        </a>\r\n                    </td>\r\n                    <td>{el.section}</td>\r\n                    <td>{el.professor}</td>\r\n                    <td>\r\n                        {el.day.map(item => item)}\r\n                    </td>\r\n                    <td>{el.hour}</td>\r\n                    <td>{el.drive_link}</td>\r\n                </tr>\r\n            ));\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n\r\n                    {/* <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-2\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputCourseDept\" placeholder=\"Dept.\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-2\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputCourseCode\" placeholder=\"Code\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputProfessorName\" placeholder=\"Professor\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-2\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputSection\" placeholder=\"Sec.\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-primary \">Search</button>\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n\r\n                    <table className=\"table py-5\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Code</th>\r\n                                <th>Name</th>\r\n                                <th>Section</th>\r\n                                <th>Professor</th>\r\n                                <th>Days</th>\r\n                                <th>Hour</th>\r\n                                <th>Drive Links</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody ref=\"table_body\">\r\n                            {getRows()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./assets/css/App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./components/Home\";\nimport Table from \"./components/Table\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\nconst App = () => {\n    return (\n        <React.Fragment>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/Table\" component={Table} />\n            </Switch>\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/\">\r\n    {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n","const axios = require(\"axios\");\n\nlet axiosDELETE = url => {\n    let options = {\n        method: \"DELETE\",\n        headers: {\n            \"x-access-token\": sessionStorage.getItem(\"token\") ?\n                sessionStorage.getItem(\"token\") :\n                null\n        },\n        url: url\n    };\n    return axios(options);\n};\n\nlet axiosGET = (url, params) => {\n    let options = {\n        method: \"GET\",\n        headers: {\n            \"x-access-token\": sessionStorage.getItem(\"token\") ? sessionStorage.getItem(\"token\") : null\n        },\n        params: params,\n        url: url\n    };\n    return axios(options);\n};\n\nlet axiosPOST = (url, data) => {\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"x-access-token\": sessionStorage.getItem(\"token\") ?\n                sessionStorage.getItem(\"token\") :\n                null\n        },\n        data: data,\n        url: url\n    };\n    return axios(options);\n};\n\nlet axiosPUT = (url, data) => {\n    let options = {\n        method: \"PUT\",\n        headers: {\n            \"x-access-token\": sessionStorage.getItem(\"token\") ?\n                sessionStorage.getItem(\"token\") :\n                null\n        },\n        data: data,\n        url: url\n    };\n    return axios(options);\n};\n\nmodule.exports = {\n    axiosDELETE,\n    axiosGET,\n    axiosPOST,\n    axiosPUT\n};"],"sourceRoot":""}